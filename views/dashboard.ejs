<!DOCTYPE html>
<html lang="en" class="h-full">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard | Modern Learning Platform</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.3s ease-in-out',
                        'slide-up': 'slideUp 0.3s ease-out',
                        'slide-in-right': 'slideInRight 0.3s ease-out',
                        'pulse-slow': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite'
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0', transform: 'translateY(-10px)' },
                            '100%': { opacity: '1', transform: 'translateY(0)' }
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(20px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' }
                        },
                        slideInRight: {
                            '0%': { transform: 'translateX(100%)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        }
                    }
                }
            }
        }
    </script>
</head>

<body class="h-full bg-gradient-to-br from-slate-50 to-blue-50 font-sans antialiased">
    <!-- Mobile Sidebar -->
    <div id="mobileSidebar" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
        <div class="fixed right-0 top-0 h-full w-64 bg-white shadow-xl transform transition-transform duration-300 translate-x-full">
            <div class="p-4 border-b">
                <div class="flex items-center justify-between">
                    <div class="flex items-center gap-x-3">
                        <div class="h-10 w-10 overflow-hidden rounded-xl bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center shadow-lg">
                            <span class="text-lg font-bold text-white"><%= username[0].toUpperCase() %></span>
                        </div>
                        <span class="font-medium text-slate-900"><%= username %></span>
                    </div>
                    <button id="closeSidebar" class="text-slate-500 hover:text-slate-700">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-4 space-y-4">
                <a href="/logout" class="flex items-center gap-x-2 px-4 py-2 text-slate-600 hover:bg-slate-50 rounded-lg">
                    <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>
                    <span>Logout</span>
                </a>
                <button data-action="delete-account" class="flex items-center gap-x-2 px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg w-full text-left">
                    <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                    <span>Delete Account</span>
                </button>
            </div>
        </div>
    </div>

    <div class="min-h-full">
        <!-- Header -->
        <header class="sticky top-0 z-40 bg-white/80 backdrop-blur-md border-b border-slate-200/80">
            <nav class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                <div class="flex h-16 items-center justify-between">
                    <!-- Left side -->
                    <div class="flex items-center gap-x-3">
                        <div class="h-10 w-10 overflow-hidden rounded-xl bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center shadow-lg shrink-0">
                            <span class="text-lg font-bold text-white"><%= username[0].toUpperCase() %></span>
                        </div>
                        <div class="hidden sm:flex flex-col">
                            <span class="text-sm text-slate-600">Welcome back,</span>
                            <span class="font-medium text-slate-900 truncate"><%= username %></span>
                        </div>
                    </div>

                    <!-- Right side -->
                    <div class="flex items-center gap-x-4">
                        <!-- Desktop Actions -->
                        <div class="hidden sm:flex items-center gap-x-4">
                            <button data-action="delete-account" class="group inline-flex items-center gap-x-2 rounded-lg px-4 py-2 text-sm font-medium text-red-600 hover:bg-red-50 transition-all duration-200">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                                <span>Danger Zone</span>
                            </button>
                            <div class="h-6 w-px bg-slate-200"></div>
                            <a href="/logout" class="rounded-lg p-2 text-slate-600 hover:bg-slate-50 transition-colors duration-200" aria-label="Logout">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                                </svg>
                            </a>
                        </div>

                        <!-- Mobile Menu Button -->
                        <button id="openSidebar" class="sm:hidden rounded-lg p-2 text-slate-600 hover:bg-slate-50 transition-colors duration-200">
                            <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                    </div>
                </div>
            </nav>
        </header>

        <!-- Main Content -->
        <main class="py-8">
            <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                <!-- Quick Actions Navigation -->
                <div class="mb-8 flex flex-wrap gap-4">
                    <a href="/" class="inline-flex items-center gap-x-2 rounded-lg px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 hover:bg-blue-100 transition-colors duration-200">
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        Batch Tests
                    </a>
                    <a href="/dpp" class="inline-flex items-center gap-x-2 rounded-lg px-4 py-2 text-sm font-medium text-purple-600 bg-purple-50 hover:bg-purple-100 transition-colors duration-200">
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                        </svg>
                        DPP Tests
                    </a>
                    <a href="/test-series" class="inline-flex items-center gap-x-2 rounded-lg px-4 py-2 text-sm font-medium text-indigo-600 bg-indigo-50 hover:bg-indigo-100 transition-colors duration-200">
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                        </svg>
                        Test Series
                    </a>
                </div>

                <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                    <!-- Live Tests Section -->
                    <div class="col-span-full">
                        <div class="rounded-2xl bg-white/80 backdrop-blur-sm shadow-xl p-6 border border-slate-200/60">
                            <div class="flex items-center gap-x-3 mb-6">
                                <div class="h-10 w-10 rounded-xl bg-red-500/10 flex items-center justify-center">
                                    <svg class="h-6 w-6 text-red-500 animate-pulse" fill="none" stroke="currentColor"
                                        viewBox="0 0 24 24">
                                        <circle cx="12" cy="12" r="10" />
                                        <path d="M12 6v6l4 2" />
                                    </svg>
                                </div>
                                <h2 class="text-xl font-semibold text-slate-900">Live Tests</h2>
                            </div>

                            <% if (liveTests && liveTests.length > 0) { %>
                                <div class="grid gap-4 lg:grid-cols-3">
                                    <% liveTests.forEach(test => { %>
                                        <div class="group rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 p-4 border border-slate-200/60">
                                            <div class="flex items-start gap-x-4">
                                                <div class="flex-shrink-0 mt-1">
                                                    <% if (test.status === 'live') { %>
                                                        <div class="h-3 w-3 rounded-full bg-red-500 animate-pulse"></div>
                                                    <% } else { %>
                                                        <div class="h-3 w-3 rounded-full bg-amber-500"></div>
                                                    <% } %>
                                                </div>
                                                <div class="flex-1 min-w-0">
                                                    <h3 class="text-base font-medium text-slate-900 truncate group-hover:text-blue-600 transition-colors duration-200">
                                                        <%= test.test_name %>
                                                    </h3>
                                                    <p class="mt-1 text-sm text-slate-500">
                                                        <%= test.batch_name %>
                                                    </p>
                                                    <div class="mt-2 space-y-1">
                                                        <p class="text-sm text-slate-600">
                                                            Starts: <%= test.formatted_start_time %>
                                                        </p>
                                                        <p class="text-sm text-slate-600">
                                                            Ends: <%= test.formatted_end_time %>
                                                        </p>
                                                    </div>
                                                    <div class="mt-3">
                                                        <span class="inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium <%= test.status === 'live' ? 'bg-red-100 text-red-800' : 'bg-amber-100 text-amber-800' %>">
                                                            <%= test.status.toUpperCase() %>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="mt-4">
                                                <% if (test.status === 'live') { %>
                                                    <% if (test.disableStartButton) { %>
                                                        <button disabled class="w-full rounded-lg bg-slate-100 px-4 py-2 text-sm text-slate-500 cursor-not-allowed">
                                                            <%= test.buttonText %>
                                                        </button>
                                                    <% } else { %>
                                                        <a href="/live-test/<%= test.batch_id %>/<%= test.test_id %>" 
                                                           class="block w-full rounded-lg bg-blue-600 px-4 py-2 text-sm font-medium text-white text-center hover:bg-blue-700 transition-all duration-200 transform hover:scale-[1.02] focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                            <%= test.buttonText %>
                                                        </a>
                                                    <% } %>
                                                <% } else { %>
                                                    <button disabled class="w-full rounded-lg bg-slate-100 px-4 py-2 text-sm text-slate-500 cursor-not-allowed">
                                                        Not Started
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            <% } else { %>
                                <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                    <svg class="mx-auto h-12 w-12 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                    </svg>
                                    <p class="mt-2 text-sm text-slate-600">No live tests available at the moment.</p>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Recent Tests Section -->
                    <div class="col-span-full lg:col-span-2">
                        <div class="rounded-2xl bg-white/80 backdrop-blur-sm shadow-xl p-6 border border-slate-200/60">
                            <div class="flex items-center gap-x-3 mb-6">
                                <div class="h-10 w-10 rounded-xl bg-emerald-500/10 flex items-center justify-center">
                                    <svg class="h-6 w-6 text-emerald-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                    </svg>
                                </div>
                                <h2 class="text-xl font-semibold text-slate-900">Recent Tests</h2>
                            </div>

                            <!-- Test Series -->
                            <div id="test-series" class="space-y-6 mb-8">
                                <div class="flex items-center justify-between">
                                    <h3 class="text-sm font-medium text-slate-900">Test Series</h3>
                                    <span class="inline-flex items-center rounded-full bg-indigo-100 px-2.5 py-0.5 text-xs font-medium text-indigo-800">
                                        <%= recentTests.test_series.length %> Tests
                                    </span>
                                </div>

                                <% if (recentTests.test_series.length > 0) { %>
                                    <div class="w-full">
                                        <% recentTests.test_series.forEach((test, index) => { %>
                                            <div class="mt-2 w-full group rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-slate-200/60">
                                                <div class="p-4 cursor-pointer flex items-center justify-between" data-toggle="details">
                                                    <h4 class="font-medium text-slate-900 group-hover:text-indigo-600 transition-colors duration-200">
                                                        <%= test.test_name %> <br>
                                                        <% if (test.batch_name !== undefined && test.batch_name !== null) { %>
                                                            (<%= test.batch_name %>)
                                                        <% } %>
                                                    </h4>
                                                    <svg class="w-5 h-5 text-slate-400 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                                    </svg>
                                                </div>
                                                <div class="hidden px-4 pb-4 space-y-3 animate-fade-in">
                                                    <p class="text-sm text-slate-600">
                                                        <span class="font-medium">Date:</span> <%= test.timestamp %>
                                                    </p>
                                                    <div class="flex gap-3">
                                                        <a href="/check-result/test_series/<%= test.batchId %>/<%= test.testId %>/normal"
                                                           class="inline-flex items-center rounded-lg px-3 py-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                            Check Result
                                                        </a>
                                                        <button onclick="verifyAndOpen('test_series','<%= test.batchId %>')"
                                                            class="inline-flex items-center rounded-lg px-3 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                            Reattempt
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }) %>
                                    </div>
                                <% } else { %>
                                    <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                        <p class="text-sm text-slate-600">No Attempted Test Series found.</p>
                                    </div>
                                <% } %>
                            </div>

                            <!-- Batch Tests -->
                            <div id="batch-tests" class="space-y-6 mb-8">
                                <div class="flex items-center justify-between">
                                    <h3 class="text-sm font-medium text-slate-900">Batch Tests</h3>
                                    <span class="inline-flex items-center rounded-full bg-blue-100 px-2.5 py-0.5 text-xs font-medium text-blue-800">
                                        <%= recentTests.batch_test.length %> Tests
                                    </span>
                                </div>

                                <% if (recentTests.batch_test.length > 0) { %>
                                    <div class="w-full">
                                        <% recentTests.batch_test.forEach((test, index) => { %>
                                            <div class="mt-2 w-full group rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-slate-200/60">
                                                <div class="p-4 cursor-pointer flex items-center justify-between" data-toggle="details">
                                                    <h4 class="font-medium text-slate-900 group-hover:text-blue-600 transition-colors duration-200">
                                                        <%= test.test_name %> <br>
                                                        <% if (test.batch_name !== undefined && test.batch_name !== null) { %>
                                                            (<%= test.batch_name %>)
                                                        <% } %>
                                                    </h4>
                                                    <svg class="w-5 h-5 text-slate-400 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                                    </svg>
                                                </div>
                                                <div class="hidden px-4 pb-4 space-y-3 animate-fade-in">
                                                    <p class="text-sm text-slate-600">
                                                        <span class="font-medium">Date:</span> <%= test.timestamp %>
                                                    </p>
                                                    <div class="flex gap-3">
                                                        <a href="/check-result/batch_test/<%= test.batchId %>/<%= test.testId %>/normal"
                                                           class="inline-flex items-center rounded-lg px-3 py-2 text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                            Check Result
                                                        </a>
                                                        <% if (test.batch_name !== undefined && test.batch_name !== null) { %>
                                                            <button onclick="verifyAndOpen('batch_test','<%= test.batchId %>')"
                                                               class="inline-flex items-center rounded-lg px-3 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                                Reattempt
                                                            </button>
                                                            
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }) %>
                                    </div>
                                <% } else { %>
                                    <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                        <p class="text-sm text-slate-600">No Attempted Batch Tests found.</p>
                                    </div>
                                <% } %>
                            </div>

                            <!-- DPP Tests -->
                            <div id="dpp-tests" class="space-y-6">
                                <div class="flex items-center justify-between">
                                    <h3 class="text-sm font-medium text-slate-900">DPP Tests</h3>
                                    <span class="inline-flex items-center rounded-full bg-purple-100 px-2.5 py-0.5 text-xs font-medium text-purple-800">
                                        <%= recentTests.batch_dpp.length %> Tests
                                    </span>
                                </div>

                                <% if (recentTests.batch_dpp.length > 0) { %>
                                    <div class="w-full">
                                        <% recentTests.batch_dpp.forEach((test, index) => { %>
                                            <div class="mt-2 w-full group rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-slate-200/60">
                                                <div class="p-4 cursor-pointer flex items-center justify-between" data-toggle="details">
                                                    <h4 class="font-medium text-slate-900 group-hover:text-purple-600 transition-colors duration-200">
                                                        <%= test.test_name %> 
                                                        <% if (test.subject_name !== undefined && test.subject_name !== null) { %>
                                                            - <%= test.subject_name %>
                                                        <% } %> <br>
                                                        <% if (test.batch_name !== undefined && test.batch_name !== null) { %>
                                                            (<%= test.batch_name %>)
                                                        <% } %>
                                                    </h4>
                                                    <svg class="w-5 h-5 text-slate-400 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                                    </svg>
                                                </div>
                                                <div class="hidden px-4 pb-4 space-y-3 animate-fade-in">
                                                    <p class="text-sm text-slate-600">
                                                        <span class="font-medium">Date:</span> <%= test.timestamp %>
                                                    </p>
                                                    <div class="flex gap-3">
                                                        <a href="/check-result/batch_dpp/<%= test.batchId %>/<%= test.testId %>/normal"
                                                           class="inline-flex items-center rounded-lg px-3 py-2 text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                            Check Result
                                                        </a>
                                                        <% if (test.subject_slug !== undefined && test.subject_slug !== null) { %>
                                                            <button onclick='verifyAndOpen("batch_dpp","<%= test.batchId %>","<%= test.subject_slug %>","<%= test.testId %>","<%= test.batch_name %>")'
                                                               class="inline-flex items-center rounded-lg px-3 py -2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                                Reattempt
                                                            </button>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }) %>
                                    </div>
                                <% } else { %>
                                    <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                        <p class="text-sm text-slate-600">No Attempted DPP Tests found.</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>

                    <!-- Favorite Batches Card -->
                    <div class="lg:col-span-1">
                        <div class="rounded-2xl bg-white/80 backdrop-blur-sm shadow-xl p-6 border border-slate-200/60">
                            <div class="flex items-center gap-x-3 mb-6">
                                <div class="h-10 w-10 rounded-xl bg-rose-500/10 flex items-center justify-center">
                                    <svg class="h-6 w-6 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                    </svg>
                                </div>
                                <h2 class="text-xl font-semibold text-slate-900">Favorites</h2>
                            </div>

                            <% if (favoriteBatches.length > 0) { %>
                                <div class="space-y-3">
                                    <% favoriteBatches.forEach(batch => { %>
                                        <div class="group flex items-center justify-between rounded-xl bg-white p-4 shadow-lg hover:shadow-xl transition-all duration-300 border border-slate-200/60">
                                            <button onclick="verifyAndOpen('batch_test','<%= batch.batchId %>')"
                                               class="text-sm font-medium text-slate-900 hover:text-blue-600 transition-colors duration-200">
                                                <%= batch.batchName %>
                                            </button>
                                            <button class="rounded-lg p-2 text-slate-400 hover:text-rose-500 hover:bg-rose-50 transition-colors duration-200"
                                                    data-action="remove-favorite"
                                                    data-batch-id="<%= batch.batchId %>">
                                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                </svg>
                                            </button>
                                        </div>
                                    <% }) %>
                                </div>
                            <% } else { %>
                                <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                    <svg class="mx-auto h-12 w-12 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                    </svg>
                                    <p class="mt-2 text-sm text-slate-600">No favorite batches found.</p>
                                    <p class="mt-1 text-xs text-slate-500">Add batches to your favorites for quick access</p>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Ended Tests Section -->
                    <div class="col-span-full">
                        <div class="rounded-2xl bg-white/80 backdrop-blur-sm shadow-xl p-6 border border-slate-200/60">
                            <div class="flex items-center gap-x-3 mb-6">
                                <div class="h-10 w-10 rounded-xl bg-slate-500/10 flex items-center justify-center">
                                    <svg class="h-6 w-6 text-slate-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                                <h2 class="text-xl font-semibold text-slate-900">Ended Tests</h2>
                            </div>

                            <% if (endedTests.length > 0) { %>
                                <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
                                    <% endedTests.forEach(test => { %>
                                        <div class="ended-test-item group rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 p-4 border border-slate-200/60">
                                            <div class="space-y-3">
                                                <div>
                                                    <h3 class="text-base font-medium text-slate-900 group-hover:text-blue-600 transition-colors duration-200">
                                                        <%= test.test_name %>
                                                    </h3>
                                                    <p class="mt-1 text-sm text-slate-500">
                                                        <%= test.batch_name %>
                                                    </p>
                                                </div>
                                                <p class="text-sm text-slate-600">
                                                    Ended on <%= test.formatted_end_time %>
                                                </p>
                                                <div>
                                                    <% if (test.hasUserSubmitted) { %>
                                                        <% if (test.isValidated) { %>
                                                            <a href="/check-result/live/<%= test.batch_id %>/<%= test.test_id %>/live"
                                                               class="inline-flex items-center rounded-lg px-4 py-2 text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 shadow-lg hover:shadow-xl">
                                                                Check Result
                                                            </a>
                                                        <% } else { %>
                                                            <button class="inline-flex items-center rounded-lg px-4 py-2 text-sm font-medium text-white bg-amber-500 hover:bg-amber-600 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 shadow-lg hover:shadow-xl"
                                                                    data-action="validate-test"
                                                                    data-batch-id="<%= test.batch_id %>"
                                                                    data-test-id="<%= test.test_id %>">
                                                                Validate Result
                                                            </button>
                                                        <% } %>
                                                    <% } else { %>
                                                        <span class="inline-flex items-center rounded-full px-3 py-1 text-sm font-medium bg-rose-100 text-rose-800">
                                                            Test Missed
                                                        </span>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            <% } else { %>
                                <div class="rounded-lg border-2 border-dashed border-slate-200 p-6 text-center">
                                    <svg class="mx-auto h-12 w-12 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                    </svg>
                                    <p class="mt-2 text-sm text-slate-600">No tests have ended yet.</p>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- JavaScript -->
    <script>
    async  function verifyAndOpen(Type,Id ,...otherargs) {
    // You can now access all the passed arguments for verification
    let url;
    console.log('Test Type:',Type);
    const response = await fetch(`/get_id_info/${Id}/${Type}`, {
                        method: 'GET',
                        headers: { 'Content-Type': 'application/json' }
                        
                    });

                    const result = await response.json();
                    console.log(result?._id)

                    if (!response.ok) {
                        throw new Error(result.message || 'API request failed');
                    }
                    switch(Type) {
        case 'test_series':
            // Verify batch test specific conditions
            console.log('Verifying batch test data...');
            url = `/batch/${result?._id}/${result?.batch_name}/${result?.type}`
            window.open(url, '_blank');
            break;
        case 'batch_test':
            // Verify batch test specific conditions
            console.log('Verifying batch test data...');
            url = `/batch/${result?._id}/${result?.batch_name}/${result?.type}`
            window.open(url, '_blank');
            break;
        case 'batch_dpp':
            // Verify DPP test specific conditions
            url = `/dpp_test/${result?._id}/${otherargs[0]}/${otherargs[1]}/${result?.batch_name}`
            window.open(url, '_blank');
            console.log('Verifying DPP test data...');
            break;

        default:
            console.warn('Unknown test type:', testType);
    }
    
    // For demonstration, returning true
    // In a real application, you would perform actual verification
    //return true;

                    
    }
        // Toast Notification System
        const Toast = (() => {
            const show = (message, type = 'info') => {
                const toast = document.createElement('div');
                const colors = {
                    success: 'bg-emerald-500',
                    error: 'bg-rose-500',
                    info: 'bg-sky-500',
                    warning: 'bg-amber-500'
                };

                const icons = {
                    success: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/></svg>',
                    error: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/></svg>',
                    info: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>',
                    warning: '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/></svg>'
                };

                toast.className = `fixed bottom-4 right-4 ${colors[type]} text-white px-6 py-3 rounded-xl shadow-lg transform transition-all duration-300 translate-y-0 opacity-100 flex items-center gap-2 z-50`;
                toast.innerHTML = `${icons[type]}<span>${message}</span>`;
                document.body.appendChild(toast);

                setTimeout(() => {
                    toast.classList.add('translate-y-2', 'opacity-0');
                    setTimeout(() => toast.remove(), 300);
                }, 3000);
            };

            return { show };
        })();

        // API Service
        const API = (() => {
            const post = async (url, data) => {
                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();

                    if (!response.ok) {
                        throw new Error(result.message || 'API request failed');
                    }

                    return result;
                } catch (error) {
                    console.error('API Error:', error);
                    throw error;
                }
            };

            return { post };
        })();

        // Test Management System
        const TestManager = (() => {
            const isTestValidated = (batchId, testId) => {
                return localStorage.getItem(`test_${batchId}_${testId}_validated`) === 'true';
            };

            const markAsValidated = (batchId, testId) => {
                localStorage.setItem(`test_${batchId}_${testId}_validated`, 'true');
            };

            const createResultButton = (batchId, testId) => {
                const button = document.createElement('a');
                button.href = `/check-result/live/${batchId}/${testId}/live`;
                button.className = 'inline-flex items-center rounded-lg px-4 py-2 text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 shadow-lg hover:shadow-xl';
                button.textContent = 'Check Result';
                return button;
            };

            const toggleDetails = (element) => {
                const details = element.nextElementSibling;
                const icon = element.querySelector('svg');

                details.classList.toggle('hidden');
                if (!details.classList.contains('hidden')) {
                    details.classList.add('animate-fade-in');
                }
                icon.classList.toggle('rotate-180');
            };

            const handleValidation = async (event, batchId, testId, button) => {
                event.preventDefault();

                try {
                    const result = await API.post(`/validate-live-test/${batchId}/${testId}`);

                    if (result.result === 'success') {
                        const newButton = createResultButton(batchId, testId);
                        button.parentNode.replaceChild(newButton, button);
                        markAsValidated(batchId, testId);
                        Toast.show('Test validated successfully! You can now view your results.', 'success');
                    } else if (result.result === 'pending') {
                        Toast.show(result.message || 'Results are not yet available. Please check back later.', 'info');
                    } else {
                        Toast.show(result.message || 'Validation could not be completed.', 'warning');
                    }
                } catch (error) {
                    Toast.show(error.message || 'Failed to validate test. Please try again later.', 'error');
                }
            };

            const initializeValidationStatus = () => {
                document.querySelectorAll('[data-action="validate-test"]').forEach(button => {
                    const batchId = button.dataset.batchId;
                    const testId = button.dataset.testId;

                    if (isTestValidated(batchId, testId)) {
                        const resultButton = createResultButton(batchId, testId);
                        button.parentNode.replaceChild(resultButton, button);
                    } else {
                        button.addEventListener('click', (e) => {
                            handleValidation(e, batchId, testId, button);
                        });
                    }
                });
            };

            return { toggleDetails, initializeValidationStatus };
        })();

        // Favorites Management System
        const FavoritesManager = (() => {
            const removeFromFavorites = async (batchId) => {
                try {
                    const result = await API.post('/remove-from-fav', { batchId });
                    Toast.show(result.message, 'success');
                    setTimeout(() => window.location.reload(), 1000);
                } catch (error) {
                    Toast.show(error.message || 'Failed to remove from favorites', 'error');
                }
            };

            return { removeFromFavorites };
        })();

        // Account Management System
        const AccountManager = (() => {
            const deleteAccount = async (password) => {
                try {
                    const result = await API.post('/delete-account', { password });
                    Toast.show(result.message, 'success');
                    setTimeout(() => window.location.href = '/', 1000);
                } catch (error) {
                    Toast.show(error.message || 'Failed to delete account', 'error');
                }
            };

            const confirmAccountDeletion = () => {
                if (confirm("Are you sure you want to delete your account?\nThis action cannot be undone.")) {
                    const password = prompt("Please enter your password to confirm account deletion:");
                    if (password) {
                        deleteAccount(password);
                    }
                }
            };

            return { confirmAccountDeletion };
        })();

        // Mobile Sidebar System
        const MobileSidebar = (() => {
            const sidebar = document.getElementById('mobileSidebar');
            const sidebarContent = sidebar?.querySelector('.fixed');
            const openButton = document.getElementById('openSidebar');
            const closeButton = document.getElementById('closeSidebar');

            const open = () => {
                sidebar.classList.remove('hidden');
                setTimeout(() => {
                    sidebar.classList.add('opacity-100');
                    sidebarContent.classList.remove('translate-x-full');
                }, 10);
            };

            const close = () => {
                sidebarContent.classList.add('translate-x-full');
                setTimeout(() => {
                    sidebar.classList.add('hidden');
                }, 300);
            };

            const init = () => {
                if (!sidebar || !openButton || !closeButton) return;

                openButton.addEventListener('click', open);
                closeButton.addEventListener('click', close);
                
                // Close sidebar when clicking outside
                sidebar.addEventListener('click', (e) => {
                    if (e.target === sidebar) {
                        close();
                    }
                });

                // Handle delete account button in sidebar
                const sidebarDeleteButton = sidebar.querySelector('[data-action="delete-account"]');
                if (sidebarDeleteButton) {
                    sidebarDeleteButton.addEventListener('click', () => {
                        close();
                        AccountManager.confirmAccountDeletion();
                    });
                }
            };

            return { init };
        })();

        // Initialize everything when the DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize validation status for all test buttons
            TestManager.initializeValidationStatus();

            // Set up test detail toggles
            document.querySelectorAll('[data-toggle="details"]').forEach(element => {
                element.addEventListener('click', () => TestManager.toggleDetails(element));
            });

            // Set up remove favorite buttons
            document.querySelectorAll('[data-action="remove-favorite"]').forEach(button => {
                button.addEventListener('click', () => {
                    FavoritesManager.removeFromFavorites(button.dataset.batchId);
                });
            });

            // Set up account deletion button
            document.querySelector('[data-action="delete-account"]')?.addEventListener(
                'click',
                AccountManager.confirmAccountDeletion
            );

            // Initialize mobile sidebar
            MobileSidebar.init();
        });
    </script>
</body>
</html>